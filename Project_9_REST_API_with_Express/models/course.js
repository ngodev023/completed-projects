'use strict';

// import dependencies
const { Model, DataTypes } = require('sequelize');
const bcrypt = require('bcryptjs');

// this model serves as the validation for data to be retrieved or inputted into the Courses table
// id's are autogenerated
// Requires that title and description present values (blank values are not allowed either)
// estimatedTime and materialsNeeded are optional
// Course.init() accepts a second parameter, which is the seuqelize instance that syncs with the db file; mandatory

module.exports = (sequelize) => {
    class Course extends Model {}
    Course.init({
        id: {
            type: DataTypes.INTEGER,
            primaryKey: true,
            autoIncrement: true
        },
        title: {
            type: DataTypes.STRING,
            allowNull: false,
            validate: {
                notNull: {
                    msg: 'Title required'
                },
                notEmpty: {
                    msg: 'Please provide a title for the course'
                }
            }
        },
        description: {
            type: DataTypes.TEXT,
            allowNull: false,
            validate: {
                notNull: {
                    msg: 'Description required'
                },
                notEmpty: {
                    msg: 'Please provide a description for the course'
                }
            }
        },
        estimatedTime: {
          type: DataTypes.STRING
        },
        materialsNeeded: {
          type: DataTypes.STRING
        }
    }, {sequelize});

    // This code associates Courses table with the Users table, specifying that Course belongs to User
    Course.associate = (models) => {
        Course.belongsTo(models.User, {
            as: 'user',
            foreignKey: 'userId'
        })
    }

    return Course;
}